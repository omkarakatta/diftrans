% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cleaning.R
\name{prep_data}
\alias{prep_data}
\title{Prepare Data}
\usage{
prep_data(
  data,
  prep,
  var = MSRP,
  support = NULL,
  count = sales,
  datevar = ym,
  lowerdate = as.Date(-Inf),
  upperdate = as.Date(Inf),
  format = "\%Y-\%m-\%d"
)
}
\arguments{
\item{data}{a tibble with counts (\code{count}) of the variable of interest (\code{var})}

\item{prep}{specifies type of preparation: "support", "counts", "pmf", "dist"}

\item{var}{variable of interest, default is \code{MSRP}}

\item{support}{optionally define support of \code{var}}

\item{count}{number of occurrences of \code{var}, default is \code{sales}}

\item{datevar}{variable of class "Date"}

\item{lowerdate}{an inclusive lower bound on \code{datevar} given as a string; default is -Inf}

\item{upperdate}{an exclusive upper bound on \code{datevar} given as a string; default is +Inf}

\item{format}{specifies the format of \code{lowerdate} and \code{upperdate}, default is "\%Y-\%m-\%d"}
}
\value{
depends on \code{prep}

\itemize{
\item If \code{prep == "support"}, then the output will be a vector of
unique values of \code{var} in ascending order
\item If \code{prep == "counts"}, then the output will be a tibble with two
columns: column 1 contains unique values of \code{var} and column 2 contains
the sum of \code{counts} in \code{data} corresponding to the the value of
\code{var}
\item If \code{prep == "pmf"}, then the output will be a tibble with two colums:
column 1 contains the values specified in \code{support} and column 2
contains the sum of \code{counts} in \code{data} corresponding to the value
in \code{support}.
\item If \code{prep = "dist"}, then the output will be vector whose values
are repetitions of the \code{var} according to \code{counts}.
}
}
\description{
Prepare Data
}
\examples{
# Obtain unique values of MSRP between 2010 and 2011 in Beijing and in Tianjin:
support_Beijing <- prep_data(Beijing_cleaned, "support", lowerdate = "2010-01-01", upperdate = "2011-01-01")
support_Beijing

# Aggregate total sales for each value of MSRP between 2010 and 2011 in Tianjin:
count <- prep_data(Tianjin_cleaned, "counts", lowerdate = "2010-01-01", upperdate = "2011-01-01")
count

# Obtain PMF of MSRP values between 2010 and 2011 in Tianjin:
pmf <- prep_data(Tianjin_cleaned, "pmf", lowerdate = "2010-01-01", upperdate = "2011-01-01")
pmf
# Note: \code{pmf} should be same as \code{count} because support is the same.
all.equal(pmf, count)

# Obtain PMF of MSRP values between 2010 and 2011 in Tianjin using full support:
full_support <- prep_data(Tianjin_cleaned, "support")
pmf2 <- prep_data(Tianjin_cleaned, "pmf", support = full_support, lowerdate = "2010-01-01", upperdate = "2011-01-01")
# Since support is different between \code{pmf2} and \code{count}, there will
# be some values of MSRP whose \code{count} is 0.

# Obtain the distribution of MSRP values between 2010 and 2011 in Tianjin:
dist <- prep_data(Tianjin_cleaned, "dist", lowerdate = "2010-01-01", upperdate = "2011-01-01")
dist
# Compare \code{dist} with \code{count}

}
